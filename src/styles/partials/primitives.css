/* 
  Force react-animate-height to animate unless 
  reduced motion setting is toggled on 
*/
.rah-animating {
  body.reduce-motion & {
    transition: none !important;
  }
  transition: height 300ms ease !important;
}

/* For modals */
@utility modal__overlay {
  backdrop-filter: saturate(120%) blur(8px);
  position: fixed;
  inset: 0;
  z-index: var(--modal-z);

  &[data-state='open'] {
    animation: fadeIn 150ms var(--ease-in-out-sine);
  }

  &[data-state='closed'] {
    animation: fadeOut 150ms var(--ease-in-out-sine);
  }

  body.reduce-motion & {
    animation: none;
  }
}

@utility modal__content {
  @apply bg-base;
  z-index: var(--modal-z);
  border-radius: var(--radius-2xl);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 480px;
  max-height: 85vh;
  padding: var(--padding-xl);

  > * + * {
    margin-top: 12px;
  }

  &[data-state='open'] {
    animation: contentShow 150ms var(--ease-in-out-sine);
  }

  &[data-state='closed'] {
    animation: contentHide 150ms var(--ease-in-out-sine);
  }

  body.reduce-motion & {
    animation: none;
  }

  h3 {
    margin-top: 20px;
  }

  &:focus {
    outline: none;
  }
}

/* For dropdowns */
@utility dropdown-trigger {
  &[data-state='open'] .dropdown-icon {
    transform: rotate(-180deg);
  }

  .dropdown-icon {
    margin-left: 4px;
    transition: transform 150ms var(--ease-in-out-sine);

    body.reduce-motion & {
      transition: none;
    }
  }
}

@utility dropdown-content {
  @apply dropdown-base;

  overflow: hidden;
  min-width: 120px;
  transform-origin: var(--radix-dropdown-menu-content-transform-origin);

  &[data-state='open'] {
    animation: scaleIn 150ms var(--ease-in-out-cubic);
  }

  &[data-state='closed'] {
    animation: scaleOut 150ms var(--ease-in-out-cubic);
  }

  body.reduce-motion & {
    animation: none;
  }
}

@utility dropdown-item {
  font-size: var(--text-sm);
  padding: var(--padding-xs);
  user-select: none;
  outline: none;
  display: block;
  transition: background-color 150ms;
  text-decoration: none;
  color: inherit;

  &:hover,
  &:focus-visible {
    outline: none;
  }

  &[data-highlighted] {
    background-color: --alpha(var(--color-background-light) / 80%);
  }
}

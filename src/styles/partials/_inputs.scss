/* ==========================================================================
   INPUTS
   ========================================================================== */

@mixin input {
  outline: none;
  border: none;
  background: none;
  color: inherit;
  font-size: var(--text-sm);
  border-radius: var(--rounded-xs);
  padding: var(--padding-sm);

  &::placeholder {
    color: rgba(var(--base-300));
    opacity: 1;
  }
}

.search {
  position: relative;

  > input {
    @include input;
    width: 100%;
    transition: box-shadow 100ms;
    text-overflow: ellipsis;
    box-shadow: inset 0 0 0 1px rgba(var(--base-300));

    &:focus,
    &:hover {
      box-shadow: inset 0 0 0 2px rgba(var(--primary-300));
    }

    &:not(:placeholder-shown) {
      padding-right: 32px;

      & ~ .clear-btn {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }

    @media screen and (max-width: $md) {
      font-size: var(--text-base);
    }
  }

  > .clear-btn {
    @include btn;

    > svg {
      height: 1rem;
      width: 1rem;
      stroke: rgba(var(--base-300));
      transition: opacity 150ms;
    }

    &:hover > svg {
      opacity: 0.7;
    }

    height: 2rem;
    width: 2rem;
    border-radius: 100%;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    display: none;
  }
}

[cmdk-list] {
  @include dropdown-base;

  position: absolute;
  font-size: var(--text-sm);
  transition: height 200ms ease;
  height: min(min(520px, calc(74vh - 78px)), calc(var(--cmdk-list-height)));
  max-height: min(520px, calc(74vh - 78px));
  overflow: scroll;
  width: calc(var(--menu-left-width) - var(--padding-base) * 2);
  border: none;

  &.hide {
    // Safari doesn't apply backdrop filter correctly on height 0
    height: 0.5px;
  }

  @media screen and (max-width: $md) {
    position: relative;
    margin-top: 4px;
    height: 240px;
    width: 100%;
    background-color: transparent;
    backdrop-filter: none;
    border-radius: 0;
    font-size: var(--text-base);

    &.hide {
      height: 240px;
    }
  }
}

[cmdk-item] {
  padding: var(--padding-xs);
  outline: none;
  transition: background-color 150ms;

  @media screen and (max-width: $md) {
    border-radius: var(--rounded-xs);
  }

  &[data-selected='true'] {
    background-color: rgba(var(--base-200), 0.8);
  }
}

[cmdk-empty] {
  padding: var(--padding-xs);
}

[cmdk-group-heading] {
  font-size: var(--text-xs);
  font-weight: 600;
  color: rgba(var(--base-300));
  padding: 6px var(--padding-xs);

  @media screen and (max-width: $md) {
    padding: 0;
  }
}

.select-trigger {
  @include btn;
  font-size: var(--text-sm);
  background: transparent;
  color: inherit;
  outline: none;
  box-shadow: inset 0 0 0 1px rgba(var(--base-300));
  border-radius: var(--rounded-xs);
  transition:
    width 200ms,
    box-shadow 100ms;
  overflow: clip;
  height: max-content;

  &[data-state='open'] .select-icon {
    transform: rotate(-180deg);
  }

  .select-icon {
    height: 1.25rem;
    width: 1.25rem;
    margin-left: 6px;
    transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);

    @media (prefers-reduced-motion) {
      transition: none;
    }
  }

  @media (prefers-reduced-motion) {
    transition: box-shadow 100ms;
  }

  @media screen and (max-width: $xs) {
    min-width: 100%;
    max-width: 100%;
  }

  &:focus,
  &:hover {
    box-shadow: inset 0 0 0 2px rgba(var(--primary-300));
  }
}

.select-trigger-content {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  min-width: max-content;
  text-align: left;
  padding: var(--padding-xs) var(--padding-xs) var(--padding-xs) var(--padding-sm);

  @media screen and (max-width: $xs) {
    min-width: 0;
    width: 100%;
  }

  > * + * {
    flex-shrink: 0;
  }
}

.select-content {
  @include dropdown-base;

  font-size: var(--text-sm);
  overflow: hidden;
  transform-origin: var(--radix-select-content-transform-origin);

  @media screen and (max-width: $xs) {
    width: var(--radix-select-trigger-width);
  }
}

.select-content[data-state='open'] {
  animation: scaleIn 150ms cubic-bezier(0.4, 0, 0.2, 1);

  @media (prefers-reduced-motion) {
    animation: none;
  }
}

.select-content[data-state='closed'] {
  animation: scaleOut 150ms cubic-bezier(0.4, 0, 0.2, 1);

  @media (prefers-reduced-motion) {
    animation: none;
  }
}

.select-item {
  padding: var(--padding-xs);
  outline: none;
  user-select: none;
  transition: background-color 150ms;
}

.select-item[data-highlighted] {
  background-color: rgba(var(--base-200), 0.8);
}

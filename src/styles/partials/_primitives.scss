/* ==========================================================================
   PRIMITIVES
   Contain styles for components in the primitive folder, such as
   AutoHeight and ScrollContainer
   ========================================================================== */

// Force react-animate-height to animate unless
// reduced motion setting is toggled on
.rah-animating {
  body.reduce-motion & {
    transition: none !important;
  }
  transition: height 300ms ease !important;
}

.auto-height-container {
  display: flex;
  flex-direction: column;

  > * + * {
    margin-top: var(--content-gap);
  }
}

.scroll-area-root {
  width: 100%;
  height: 100%;
  overflow: hidden;
  --scrollbar-size: 10px;
}

@include property($variable: start, $syntax: '<color>', $inherits: false, $initial-value: #000);
@include property($variable: end, $syntax: '<color>', $inherits: false, $initial-value: #000);

.scroll-area-viewport {
  width: 100%;
  height: 100%;
  border-radius: inherit;
  --overlay-size: 2.5rem;
  --start: #000;
  --end: #000;

  transition:
    --start 150ms ease 0s,
    --end 150ms ease 0s;

  mask-image: linear-gradient(
    to bottom,
    var(--start) 0,
    #000 var(--overlay-size),
    #000 calc(100% - var(--overlay-size)),
    var(--end) 100%
  );

  &.overlay-top {
    --start: transparent;
    --end: #000;
  }

  &.overlay-bottom {
    --start: #000;
    --end: transparent;
  }

  &.overlay-bottom.overlay-top {
    --start: transparent;
    --end: transparent;
  }

  > div {
    display: block !important;
  }
}

.scroll-area-scrollbar {
  display: flex;
  user-select: none;
  touch-action: none;
  padding: 2px;
  background: transparent;
  border-radius: var(--rounded-base);
  transition: background 150ms ease-out;

  &:hover {
    background: rgba(var(--base-100));
  }

  &[data-orientation='vertical'] {
    width: var(--scrollbar-size);
    height: 100%;
  }
}

.scroll-area-thumb {
  flex: 1;
  background: rgba(var(--base-300), 0.7);
  border-radius: var(--scrollbar-size);
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    min-width: 44px;
    min-height: 44px;
  }
}

.carousel {
  position: relative;
}

.carousel-content {
  border-radius: var(--rounded-sm);
  overflow: hidden;
}

.carousel-content-container {
  display: flex;
}

.carousel-item {
  flex: 0 0 100%;
  min-width: 0;
  min-height: 100px;
  aspect-ratio: 16 / 9;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.carousel-actions {
  position: absolute;
  display: flex;
  justify-content: space-between;
  width: 100%;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  padding: 0 4px;
}

.carousel button {
  @include btn;
  @include btn-sm-square;
  backdrop-filter: saturate(120%) blur(1px);
  background-color: rgba(var(--base-100), 0.6);
  border-radius: 100%;
  flex-shrink: 0;
  transition: background-color 150ms;

  &:disabled {
    opacity: 0.5;
    cursor: default;
  }

  &:hover:not(:disabled) {
    background-color: rgba(var(--base-100), 0.7);
  }
}

.carousel-dots {
  display: flex;
  justify-content: center;
  gap: 4px;
  margin-top: 8px;

  > button {
    @include btn;
    background-color: rgba(var(--base-300), 0.3);
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 100%;
    transition: background-color 150ms;

    &:hover {
      background-color: rgba(var(--base-300), 0.4);
    }

    &.active {
      background-color: rgba(var(--primary-200));
    }
  }
}

.img-container {
  position: relative;
  height: 100%;

  img,
  .img-container__caption {
    opacity: 0;
    transition: opacity 150ms;
  }
}

.img-container--loaded {
  img,
  .img-container__caption {
    opacity: 1;
  }
}

.img-container__spinner {
  position: absolute;
  width: 100%;
  display: flex;
  justify-content: center;
  top: 50%;
  transform: translateY(-50%);
  color: rgba(var(--base-content));

  > svg {
    height: 2rem;
    width: 2rem;
    animation: spin 1s linear infinite;
  }
}

.img-container__caption {
  position: absolute;
  bottom: 0;
  left: 6px;
  font-size: var(--text-xs);
  color: rgba(var(--base-content));
  font-family: 'Figtree Variable', system-ui, sans-serif;
  font-weight: 600;
  text-shadow: rgba(0, 0, 0, 0.82) 1px 1px 4px;
}

---
import 'cesium/Build/Cesium/Widgets/widgets.css';
---

<style>
  #cesiumContainer {
    height: 100dvh;
    max-height: 100%;
  }
</style>

<script>
  import buildingsData from '../content/buildings/buildings.json';

  window.CESIUM_BASE_URL = '/cesium';

  import { activeMenu, buildingProperties, searchQuery, buildingDataLayer } from '../store';

  import {
    Cartesian3,
    createOsmBuildingsAsync,
    Ion,
    Math as CesiumMath,
    Terrain,
    Viewer,
    Cesium3DTileStyle,
    IonImageryProvider,
    ImageryLayer,
    ScreenSpaceEventType,
    defined,
    MapboxStyleImageryProvider,
  } from 'cesium';

  const isDev = import.meta.env.DEV;

  Ion.defaultAccessToken = import.meta.env.PUBLIC_CESIUM_TOKEN;

  const mapboxSatellite = new MapboxStyleImageryProvider({
    styleId: 'satellite-v9',
    accessToken: import.meta.env.PUBLIC_MAPBOX_TOKEN,
  });

  const mapboxDark = new MapboxStyleImageryProvider({
    styleId: 'dark-v11',
    accessToken: import.meta.env.PUBLIC_MAPBOX_TOKEN,
  });

  // Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.
  const viewer = new Viewer('cesiumContainer', {
    terrain: Terrain.fromWorldTerrain(),
    navigationHelpButton: false,
    homeButton: false,
    fullscreenButton: false,
    baseLayerPicker: false,
    sceneModePicker: false,
    animation: false, // Disables the Cesium animation clock
    geocoder: false, // Disables the Cesium search button
  });

  let mapLayers = ['satellite', 'dark'];
  viewer.imageryLayers.removeAll();
  viewer.imageryLayers.addImageryProvider(mapboxSatellite);
  viewer.imageryLayers.addImageryProvider(mapboxDark);

  if (isDev) {
    viewer.imageryLayers.add(ImageryLayer.fromProviderAsync(IonImageryProvider.fromAssetId(3954), {}));
    mapLayers.push('sentinel');
  }

  let nusView = {
    destination: Cartesian3.fromDegrees(103.77678, 1.28342, 800),
    orientation: {
      heading: CesiumMath.toRadians(0.0),
      pitch: CesiumMath.toRadians(-30.0),
    },
  };

  // Initial view
  viewer.camera.setView(nusView);

  // Add Cesium OSM Buildings, a global 3D buildings layer.
  const osmBuildingsTileset = await createOsmBuildingsAsync();
  viewer.scene.primitives.add(osmBuildingsTileset);

  osmBuildingsTileset.style = new Cesium3DTileStyle({
    show: {
      conditions: [
        ["${feature['cesium#longitude']} > 103.78171", false],
        ["${feature['cesium#longitude']} < 103.77022", false],
        ["${feature['cesium#latitude']} < 1.29088", false],
        ["${feature['cesium#latitude']} > 1.30824", false],
      ],
    },
  });

  const handler = viewer.screenSpaceEventHandler;
  handler.setInputAction(function (movement: any) {
    const pickedFeature = viewer.scene.pick(movement.position);
    if (!defined(pickedFeature)) {
      return;
    }

    if (defined(pickedFeature)) {
      activeMenu.set('BuildingInfo');
      const featureName = pickedFeature.getProperty('name') || '';
      const featureData = buildingsData.filter((d) => d.name === featureName);

      if (featureData.length > 0) {
        buildingProperties.set(featureData[0]);
      } else {
        buildingProperties.set({ name: featureName });
      }

      searchQuery.set(featureName);
    }
  }, ScreenSpaceEventType.LEFT_CLICK);

  const menu = document.getElementById('menu');
  menu?.addEventListener('click', () => {
    // Timeout is necessary to allow for the state to update first
    setTimeout(() => {
      const showOsmBuildings = buildingDataLayer.get() === 'osm';
      if (showOsmBuildings) {
        osmBuildingsTileset.show = true;
      } else {
        osmBuildingsTileset.show = false;
      }
    });
  });

  const homeButton = document.getElementById('home-button');
  homeButton!.onclick = () => viewer.camera.flyTo(nusView);

  const mapPickerBtn = document.getElementById('map-picker-btn');
  mapPickerBtn?.addEventListener('click', () => {
    setTimeout(() => {
      const mapboxDarkBtn = document.getElementById('mapbox-dark-btn');
      const mapboxSatelliteBtn = document.getElementById('mapbox-satellite-btn');
      const displayedLayer = mapLayers[mapLayers.length - 1];

      if (displayedLayer === 'dark') {
        mapboxDarkBtn!.classList.add('active');
      }

      if (displayedLayer === 'satellite') {
        mapboxSatelliteBtn!.classList.add('active');
      }

      mapboxDarkBtn!.onclick = () => {
        viewer.imageryLayers.raiseToTop(viewer.imageryLayers.get(mapLayers.indexOf('dark')));
        mapboxDarkBtn!.classList.add('active');
        mapboxSatelliteBtn!.classList.remove('active');
        mapLayers = [...mapLayers.filter((layer) => layer !== 'dark'), 'dark'];
      };

      mapboxSatelliteBtn!.onclick = () => {
        viewer.imageryLayers.raiseToTop(viewer.imageryLayers.get(mapLayers.indexOf('satellite')));
        mapboxSatelliteBtn!.classList.add('active');
        mapboxDarkBtn!.classList.remove('active');
        mapLayers = [...mapLayers.filter((layer) => layer !== 'satellite'), 'satellite'];
      };
    });
  });
</script>

<div id="cesiumContainer"></div>
